// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.158.0/containers/docker-existing-dockerfile
{
	"name": "DevContainer",

	"image": "python:3.9.2-buster",
	// Set *default* container specific settings.json values on container create.
	"settings": {
		"terminal.integrated.shell.linux": null
	},

	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
		"ms-python.vscode-pylance",
		"rogalmic.bash-debu",
		"coenraads.bracket-pair-colorizer",
		"googlecloudtools.cloudcode",
		"mhutchie.git-graph",
		"donjayamanne.githistory",
		"github.vscode-pull-request-github",
		"eamodio.gitlens",
		"ms-toolsai.jupyter",
		"mechatroner.rainbow-csv",
		"shardulm94.trailing-spaces",
		"vscode-icons-team.vscode-icons"
	],

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Uncomment the next line to run commands after the container is created - for example installing curl.
	"postCreateCommand": "poetry install && pre-commit install",

	// Uncomment when using a ptrace-based debugger like C++, Go, and Rust
	"runArgs": ["--init", "--privileged"], //"--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined" ],

	// Uncomment to use the Docker CLI from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker.
	//"mounts": [
//		"source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind",
//		"source=${localEnv:HOME}/.ssh,target=/root/.ssh,type=bind"
//	],
//
//	"remoteEnv": { "LOCAL_WORKSPACE_FOLDER": "${localWorkspaceFolder}" }

	// Uncomment to connect as a non-root user if you've added one. See https://aka.ms/vscode-remote/containers/non-root.
	// "remoteUser": "vscode"
}
